{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/LABORATORIA/AFRONTEND/SCL008-BurgerQueen/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mac/Desktop/LABORATORIA/AFRONTEND/SCL008-BurgerQueen/src/component/Client.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from './Button';\n\nclass Diner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleName = e => {\n      e.preventDefault();\n      this.props.turnName(this.getTitle.value);\n    };\n\n    this.handleName = this.handleName.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Ingrese Nombre\",\n      ref: input => this.getTitle = input // value={this.props.turnName}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \">>\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return _objectSpread({}, state);\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    turnName: addToName(dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Diner);","map":{"version":3,"sources":["/Users/mac/Desktop/LABORATORIA/AFRONTEND/SCL008-BurgerQueen/src/component/Client.js"],"names":["React","Component","connect","Button","Diner","constructor","props","handleName","e","preventDefault","turnName","getTitle","value","bind","render","input","mapStateToProps","state","mapDispatchToProps","dispatch","addToName"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,UALmB,GAKLC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,QAAX,CAAoB,KAAKC,QAAL,CAAcC,KAAlC;AACH,KARkB;;AAEf,SAAKL,UAAL,GAAkB,KAAKA,UAAL,CAAgBM,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAOLC,EAAAA,MAAM,GAAG;AAET,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKP,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,GAAG,EAAGQ,KAAD,IAAS,KAAKJ,QAAL,GAAgBI,KAHhC,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADL,CADH,CADF;AAeA;;AA5B4B;;AA8B9B,MAAMC,eAAe,GAAIC,KAAD,IAAS;AAC7B,2BACKA,KADL;AAGD,CAJH;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLT,IAAAA,QAAQ,EAAEU,SAAS,CAACD,QAAD;AADd,GAAP;AAID,CALH;;AAME,eAAejB,OAAO,CACpBc,eADoB,EAEpBE,kBAFoB,CAAP,CAGXd,KAHW,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Button from './Button';\n\nclass Diner extends Component {\n    constructor(props) {\n        super(props);\n        this.handleName = this.handleName.bind(this);\n      }\n      \n    handleName = (e) => {\n        e.preventDefault();\n        this.props.turnName(this.getTitle.value)\n    }\n      \n  render() {\n     \n  return (\n    <div>\n       <Form onSubmit={this.handleName}>\n            <Form.Group>\n              <Form.Control\n                type=\"text\" \n                placeholder=\"Ingrese Nombre\"\n                ref={(input)=>this.getTitle = input}\n                // value={this.props.turnName}\n              />\n                <Button variant=\"primary\" type=\"submit\">>></Button>\n            </Form.Group>\n          </Form>\n    </div>\n  );\n }\n}\nconst mapStateToProps = (state)=>{\n    return {\n      ...state\n    };\n  };\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      turnName: addToName(dispatch),\n      \n    }\n  }\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    )(Diner);"]},"metadata":{},"sourceType":"module"}